<Type Name="CCParticleSystem" FullName="CocosSharp.CCParticleSystem">
  <TypeSignature Language="C#" Value="public class CCParticleSystem : CocosSharp.CCNode, CocosSharp.ICCTexture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCParticleSystem extends CocosSharp.CCNode implements class CocosSharp.ICCBlendable, class CocosSharp.ICCTexture" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CocosSharp.ICCTexture</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>Particle System base class. Attributes of a Particle System: </para>
    </summary>
    <remarks>
      <para>
        <list type="bullet" />
      </para>
      <list type="bullet" />
      <para>
        <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref> also supports particles generated by Particle Designer (<ulink url="http://particledesigner.71squared.com/">http://particledesigner.71squared.com/</ulink>). 'Radius Mode' in Particle Designer uses a fixed emit rate of 30 hz. Since that can't be guaranteed in <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref>, <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref> uses a another approach, but the results are almost identical.</para>
      <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref>
      <ulink url="http://particledesigner.71squared.com/">http://particledesigner.71squared.com/</ulink>
      <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref>
      <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref>
      <para>
        <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref> supports all the variables used by Particle Designer plus a bit more:<list type="bullet" /></para>
      <ref refid="namespacecocos2d" kindref="compound">cocos2d</ref>
      <list type="bullet" />
      <para>It is possible to customize any of the above mentioned properties in runtime. Example:</para>
      <para>
        <programlisting>
          <codeline>
            <highlight class="normal">emitter.radialAccel<sp />=<sp />15;</highlight>
          </codeline>
          <codeline>
            <highlight class="normal">emitter.startSpin<sp />=<sp />0;</highlight>
          </codeline>
        </programlisting>
      </para>
      <programlisting>
        <codeline>
          <highlight class="normal">emitter.radialAccel<sp />=<sp />15;</highlight>
        </codeline>
        <codeline>
          <highlight class="normal">emitter.startSpin<sp />=<sp />0;</highlight>
        </codeline>
      </programlisting>
      <codeline>
        <highlight class="normal">emitter.radialAccel<sp />=<sp />15;</highlight>
      </codeline>
      <highlight class="normal">emitter.radialAccel<sp />=<sp />15;</highlight>
      <sp />
      <sp />
      <codeline>
        <highlight class="normal">emitter.startSpin<sp />=<sp />0;</highlight>
      </codeline>
      <highlight class="normal">emitter.startSpin<sp />=<sp />0;</highlight>
      <sp />
      <sp />
      <item>
        <description>emission rate of the particles</description>
      </item>
      <description>emission rate of the particles</description>
      <item>
        <description>Gravity Mode (Mode A):</description>
      </item>
      <description>Gravity Mode (Mode A):</description>
      <item>
        <description>gravity</description>
      </item>
      <description>gravity</description>
      <item>
        <description>direction</description>
      </item>
      <description>direction</description>
      <item>
        <description>speed +- variance</description>
      </item>
      <description>speed +- variance</description>
      <item>
        <description>tangential acceleration +- variance</description>
      </item>
      <description>tangential acceleration +- variance</description>
      <item>
        <description>radial acceleration +- variance</description>
      </item>
      <description>radial acceleration +- variance</description>
      <item>
        <description>Radius Mode (Mode B):</description>
      </item>
      <description>Radius Mode (Mode B):</description>
      <item>
        <description>startRadius +- variance</description>
      </item>
      <description>startRadius +- variance</description>
      <item>
        <description>endRadius +- variance</description>
      </item>
      <description>endRadius +- variance</description>
      <item>
        <description>rotate +- variance</description>
      </item>
      <description>rotate +- variance</description>
      <item>
        <description>Properties common to all modes:</description>
      </item>
      <description>Properties common to all modes:</description>
      <item>
        <description>life +- life variance</description>
      </item>
      <description>life +- life variance</description>
      <item>
        <description>start spin +- variance</description>
      </item>
      <description>start spin +- variance</description>
      <item>
        <description>end spin +- variance</description>
      </item>
      <description>end spin +- variance</description>
      <item>
        <description>start size +- variance</description>
      </item>
      <description>start size +- variance</description>
      <item>
        <description>end size +- variance</description>
      </item>
      <description>end size +- variance</description>
      <item>
        <description>start color +- variance</description>
      </item>
      <description>start color +- variance</description>
      <item>
        <description>end color +- variance</description>
      </item>
      <description>end color +- variance</description>
      <item>
        <description>life +- variance</description>
      </item>
      <description>life +- variance</description>
      <item>
        <description>blending function</description>
      </item>
      <description>blending function</description>
      <item>
        <description>texture</description>
      </item>
      <description>texture</description>
      <item>
        <description>spinning particles (supported when using ParticleSystemQuad)</description>
      </item>
      <description>spinning particles (supported when using ParticleSystemQuad)</description>
      <item>
        <description>tangential acceleration (Gravity mode)</description>
      </item>
      <description>tangential acceleration (Gravity mode)</description>
      <item>
        <description>radial acceleration (Gravity mode)</description>
      </item>
      <description>radial acceleration (Gravity mode)</description>
      <item>
        <description>radius direction (Radius mode) (Particle Designer supports outwards to inwards direction only)</description>
      </item>
      <description>radius direction (Radius mode) (Particle Designer supports outwards to inwards direction only)</description>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCParticleSystem (CocosSharp.CCParticleSystemConfig particleConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCParticleSystemConfig particleConfig) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="particleConfig" Type="CocosSharp.CCParticleSystemConfig" />
      </Parameters>
      <Docs>
        <param name="particleConfig">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CCParticleSystem (int numberOfParticles, CocosSharp.CCEmitterMode emitterMode = CocosSharp.CCEmitterMode.Gravity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 numberOfParticles, valuetype CocosSharp.CCEmitterMode emitterMode) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="numberOfParticles" Type="System.Int32" />
        <Parameter Name="emitterMode" Type="CocosSharp.CCEmitterMode" />
      </Parameters>
      <Docs>
        <param name="numberOfParticles">To be added.</param>
        <param name="emitterMode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCParticleSystem (string plistFile, string directoryName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string plistFile, string directoryName) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="plistFile" Type="System.String" />
        <Parameter Name="directoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="plistFile">To be added.</param>
        <param name="directoryName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocatedParticles">
      <MemberSignature Language="C#" Value="protected int AllocatedParticles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AllocatedParticles" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public float Angle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Angle" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setAngle </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AngleVar">
      <MemberSignature Language="C#" Value="public float AngleVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngleVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setAngleVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AtlasIndex">
      <MemberSignature Language="C#" Value="public int AtlasIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AtlasIndex" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRemoveOnFinish">
      <MemberSignature Language="C#" Value="public bool AutoRemoveOnFinish { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoRemoveOnFinish" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchNode">
      <MemberSignature Language="C#" Value="public virtual CocosSharp.CCParticleBatchNode BatchNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCParticleBatchNode BatchNode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCParticleBatchNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setBatchNode </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BlendAdditive">
      <MemberSignature Language="C#" Value="public bool BlendAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlendAdditive" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFunc">
      <MemberSignature Language="C#" Value="public CocosSharp.CCBlendFunc BlendFunc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCBlendFunc BlendFunc" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCBlendFunc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setBlendFunc </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public float Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Duration" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setDuration </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="protected float Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elapsed" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmissionRate">
      <MemberSignature Language="C#" Value="public float EmissionRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EmissionRate" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEmissionRate </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EmitCounter">
      <MemberSignature Language="C#" Value="protected float EmitCounter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EmitCounter" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitterMode">
      <MemberSignature Language="C#" Value="public CocosSharp.CCEmitterMode EmitterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCEmitterMode EmitterMode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCEmitterMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEmitterMode </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndColor">
      <MemberSignature Language="C#" Value="public CocosSharp.CCColor4F EndColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCColor4F EndColor" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCColor4F</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndColor </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndColorVar">
      <MemberSignature Language="C#" Value="public CocosSharp.CCColor4F EndColorVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCColor4F EndColorVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCColor4F</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndColorVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndRadius">
      <MemberSignature Language="C#" Value="public float EndRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndRadius" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRadiusVar">
      <MemberSignature Language="C#" Value="public float EndRadiusVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndRadiusVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSize">
      <MemberSignature Language="C#" Value="public float EndSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndSize" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndSize </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndSizeVar">
      <MemberSignature Language="C#" Value="public float EndSizeVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndSizeVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndSizeVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndSpin">
      <MemberSignature Language="C#" Value="public float EndSpin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndSpin" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndSpin </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndSpinVar">
      <MemberSignature Language="C#" Value="public float EndSpinVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 EndSpinVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setEndSpinVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Gravity">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint Gravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPoint Gravity" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GravityMode">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCParticleSystem.GravityMoveMode GravityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCParticleSystem/GravityMoveMode GravityMode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCParticleSystem+GravityMoveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GravityParticles">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCParticleSystem.CCParticleGravity[] GravityParticles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCParticleSystem/CCParticleGravity[] GravityParticles" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCParticleSystem+CCParticleGravity[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFull">
      <MemberSignature Language="C#" Value="public bool IsFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFull" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layer">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCLayer Layer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCLayer Layer" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCLayer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Life">
      <MemberSignature Language="C#" Value="public float Life { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Life" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setLife </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LifeVar">
      <MemberSignature Language="C#" Value="public float LifeVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LifeVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setLifeVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="public override void OnEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnEnter() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExit">
      <MemberSignature Language="C#" Value="public override void OnExit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnExit() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityModifyRGB">
      <MemberSignature Language="C#" Value="public bool OpacityModifyRGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OpacityModifyRGB" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setOpacityModifyRGB </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParticleCount">
      <MemberSignature Language="C#" Value="public int ParticleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticleCount" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>getParticleCount </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParticleDurationInfinity">
      <MemberSignature Language="C#" Value="public const int ParticleDurationInfinity = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ParticleDurationInfinity = (-1)" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleStartRadiusEqualToEndRadius">
      <MemberSignature Language="C#" Value="public const int ParticleStartRadiusEqualToEndRadius = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ParticleStartRadiusEqualToEndRadius = (-1)" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticleStartSizeEqualToEndSize">
      <MemberSignature Language="C#" Value="public const int ParticleStartSizeEqualToEndSize = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ParticleStartSizeEqualToEndSize = (-1)" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionType">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPositionType PositionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPositionType PositionType" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPositionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setPositionType </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PositionVar">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint PositionVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPoint PositionVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostStep">
      <MemberSignature Language="C#" Value="protected virtual void PostStep ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostStep() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>should be overridden by subclasses </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RadialAccel">
      <MemberSignature Language="C#" Value="public float RadialAccel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RadialAccel" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RadialAccelVar">
      <MemberSignature Language="C#" Value="public float RadialAccelVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RadialAccelVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RadialMode">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCParticleSystem.RadialMoveMode RadialMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCParticleSystem/RadialMoveMode RadialMode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCParticleSystem+RadialMoveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RadialParticles">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCParticleSystem.CCParticleRadial[] RadialParticles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCParticleSystem/CCParticleRadial[] RadialParticles" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCParticleSystem+CCParticleRadial[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSystem">
      <MemberSignature Language="C#" Value="public void ResetSystem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSystem() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Kill all living particles. </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePerSecond">
      <MemberSignature Language="C#" Value="public float RotatePerSecond { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotatePerSecond" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePerSecondVar">
      <MemberSignature Language="C#" Value="public float RotatePerSecondVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotatePerSecondVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationIsDir">
      <MemberSignature Language="C#" Value="public bool RotationIsDir { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RotationIsDir" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scene">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCScene Scene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCScene Scene" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCScene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePosition">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint SourcePosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPoint SourcePosition" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setSourcePosition </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public float Speed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Speed" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedVar">
      <MemberSignature Language="C#" Value="public float SpeedVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SpeedVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartColor">
      <MemberSignature Language="C#" Value="public CocosSharp.CCColor4F StartColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCColor4F StartColor" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCColor4F</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartColor </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartColorVar">
      <MemberSignature Language="C#" Value="public CocosSharp.CCColor4F StartColorVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCColor4F StartColorVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCColor4F</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartColorVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartRadius">
      <MemberSignature Language="C#" Value="public float StartRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartRadius" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRadiusVar">
      <MemberSignature Language="C#" Value="public float StartRadiusVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartRadiusVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSize">
      <MemberSignature Language="C#" Value="public float StartSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartSize" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartSize </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartSizeVar">
      <MemberSignature Language="C#" Value="public float StartSizeVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartSizeVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartSizeVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartSpin">
      <MemberSignature Language="C#" Value="public float StartSpin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartSpin" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartSpin </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartSpinVar">
      <MemberSignature Language="C#" Value="public float StartSpinVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StartSpinVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setStartSpinVar </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StopSystem">
      <MemberSignature Language="C#" Value="public void StopSystem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopSystem() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>stop emitting particles. Running particles will continue to run until they die </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TangentialAccel">
      <MemberSignature Language="C#" Value="public float TangentialAccel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TangentialAccel" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TangentialAccelVar">
      <MemberSignature Language="C#" Value="public float TangentialAccelVar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TangentialAccelVar" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public virtual CocosSharp.CCTexture2D Texture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTexture </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TotalParticles">
      <MemberSignature Language="C#" Value="public virtual int TotalParticles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalParticles" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTotalParticles </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override void Update (float dt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Update(float32 dt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dt" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuads">
      <MemberSignature Language="C#" Value="public virtual void UpdateQuads ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateQuads() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWithNoTime">
      <MemberSignature Language="C#" Value="public void UpdateWithNoTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateWithNoTime() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
