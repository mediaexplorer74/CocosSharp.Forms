<Type Name="CCOrbitCamera" FullName="CocosSharp.CCOrbitCamera">
  <TypeSignature Language="C#" Value="public class CCOrbitCamera : CocosSharp.CCActionCamera" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCOrbitCamera extends CocosSharp.CCActionCamera" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCActionCamera</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para> action Orbits the camera around the center of the screen using spherical coordinates. </para>
    </summary>
    <remarks>
      <para kind="tool">When this action is added to a CCNode, the action will run over a period of time.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCOrbitCamera (float t, float radius, float deltaRadius, float angleZ, float deltaAngleZ, float angleX, float deltaAngleX);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 t, float32 radius, float32 deltaRadius, float32 angleZ, float32 deltaAngleZ, float32 angleX, float32 deltaAngleX) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="deltaRadius" Type="System.Single" />
        <Parameter Name="angleZ" Type="System.Single" />
        <Parameter Name="deltaAngleZ" Type="System.Single" />
        <Parameter Name="angleX" Type="System.Single" />
        <Parameter Name="deltaAngleX" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="deltaRadius">To be added.</param>
        <param name="angleZ">To be added.</param>
        <param name="deltaAngleZ">To be added.</param>
        <param name="angleX">To be added.</param>
        <param name="deltaAngleX">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngleX">
      <MemberSignature Language="C#" Value="public float AngleX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngleX" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngleZ">
      <MemberSignature Language="C#" Value="public float AngleZ { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngleZ" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaAngleX">
      <MemberSignature Language="C#" Value="public float DeltaAngleX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DeltaAngleX" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaAngleZ">
      <MemberSignature Language="C#" Value="public float DeltaAngleZ { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DeltaAngleZ" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaRadius">
      <MemberSignature Language="C#" Value="public float DeltaRadius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DeltaRadius" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public float Radius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Radius" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override CocosSharp.CCActionState StartAction (CocosSharp.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class CocosSharp.CCActionState StartAction(class CocosSharp.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="CocosSharp.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">Target object on which the action will be performed.</param>
        <summary>
          <para kind="tool">Starts the action on the specified target</para>
        </summary>
        <returns>
        </returns>
        <remarks>
          <para kind="tool">This creates a new state object of type <see cref="T:CocosSharp.CCActionState" /> that will track the state of the action.</para>
          <para kind="tool">This method is typically invoked by implementations of CCActions or by the CocosSharp runtime, when you invoke the <see cref="M:CocosSharp.CCNode.AddAction" /> method.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
