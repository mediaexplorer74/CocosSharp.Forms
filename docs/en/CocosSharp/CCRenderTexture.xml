<Type Name="CCRenderTexture" FullName="CocosSharp.CCRenderTexture">
  <TypeSignature Language="C#" Value="public class CCRenderTexture : CocosSharp.CCNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCRenderTexture extends CocosSharp.CCNode" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para> is a generic rendering target. To render things into it, simply construct a render target, call begin on it, call visit on any cocos scenes or objects to render them, and call end. For convenience, render texture adds a sprite as it's display child with the results, so you can simply add the render texture to your scene and treat it like any other CocosNode. There are also functions for saving the render texture to disk in PNG or JPG format. </para>
    </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>creates a  object with width and height in Points, pixel format is RGBA8888 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCRenderTexture (CocosSharp.CCSize contentSize, CocosSharp.CCSize textureSizeInPixels, CocosSharp.CCSurfaceFormat colorFormat = CocosSharp.CCSurfaceFormat.Color, CocosSharp.CCDepthFormat depthFormat = CocosSharp.CCDepthFormat.None, CocosSharp.CCRenderTargetUsage usage = CocosSharp.CCRenderTargetUsage.DiscardContents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCSize contentSize, valuetype CocosSharp.CCSize textureSizeInPixels, valuetype CocosSharp.CCSurfaceFormat colorFormat, valuetype CocosSharp.CCDepthFormat depthFormat, valuetype CocosSharp.CCRenderTargetUsage usage) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="contentSize" Type="CocosSharp.CCSize" />
        <Parameter Name="textureSizeInPixels" Type="CocosSharp.CCSize" />
        <Parameter Name="colorFormat" Type="CocosSharp.CCSurfaceFormat" />
        <Parameter Name="depthFormat" Type="CocosSharp.CCDepthFormat" />
        <Parameter Name="usage" Type="CocosSharp.CCRenderTargetUsage" />
      </Parameters>
      <Docs>
        <param name="contentSize">To be added.</param>
        <param name="textureSizeInPixels">To be added.</param>
        <param name="colorFormat">To be added.</param>
        <param name="depthFormat">To be added.</param>
        <param name="usage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public virtual void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Begin() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>starts grabbing </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public void BeginWithClear (float r, float g, float b, float a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginWithClear(float32 r, float32 g, float32 b, float32 a) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="a" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="g">To be added.</param>
        <param name="b">To be added.</param>
        <param name="a">To be added.</param>
        <summary>starts rendering to the texture while clearing the texture first. This is more efficient then calling -clear first and then -begin </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public void BeginWithClear (float r, float g, float b, float a, float depthValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginWithClear(float32 r, float32 g, float32 b, float32 a, float32 depthValue) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="depthValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="g">To be added.</param>
        <param name="b">To be added.</param>
        <param name="a">To be added.</param>
        <param name="depthValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWithClear">
      <MemberSignature Language="C#" Value="public void BeginWithClear (float r, float g, float b, float a, float depthValue, int stencilValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginWithClear(float32 r, float32 g, float32 b, float32 a, float32 depthValue, int32 stencilValue) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="depthValue" Type="System.Single" />
        <Parameter Name="stencilValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="g">To be added.</param>
        <param name="b">To be added.</param>
        <param name="a">To be added.</param>
        <param name="depthValue">To be added.</param>
        <param name="stencilValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (float r, float g, float b, float a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(float32 r, float32 g, float32 b, float32 a) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="a" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="g">To be added.</param>
        <param name="b">To be added.</param>
        <param name="a">To be added.</param>
        <summary>clears the texture with a color </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearDepth">
      <MemberSignature Language="C#" Value="public void ClearDepth (float depthValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearDepth(float32 depthValue) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depthValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="depthValue">To be added.</param>
        <summary>Value for clearDepth. Valid only when autoDraw is true. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearStencil">
      <MemberSignature Language="C#" Value="public void ClearStencil (int stencilValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearStencil(int32 stencilValue) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stencilValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stencilValue">To be added.</param>
        <summary>Value for clear Stencil. Valid only when autoDraw is true </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public virtual void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void End() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ends grabbing </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCSurfaceFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCSurfaceFormat PixelFormat" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCSurfaceFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToStream">
      <MemberSignature Language="C#" Value="public bool SaveToStream (System.IO.Stream stream, CocosSharp.CCImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SaveToStream(class System.IO.Stream stream, valuetype CocosSharp.CCImageFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="CocosSharp.CCImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sprite">
      <MemberSignature Language="C#" Value="public CocosSharp.CCSprite Sprite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCSprite Sprite" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCSprite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setSprite </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public CocosSharp.CCTexture2D Texture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
