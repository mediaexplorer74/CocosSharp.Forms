<Type Name="CCSequence" FullName="CocosSharp.CCSequence">
  <TypeSignature Language="C#" Value="public class CCSequence : CocosSharp.CCFiniteTimeAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCSequence extends CocosSharp.CCFiniteTimeAction" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCFiniteTimeAction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Runs actions sequentially, one after another. </para>
    </summary>
    <remarks>
      <para kind="tool">When this action is added to a CCNode, the action will run over a period of time.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSequence (CocosSharp.CCFiniteTimeAction[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCFiniteTimeAction[] actions) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="actions" Type="CocosSharp.CCFiniteTimeAction[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">To be added.</param>
        <summary>helper constructor to create an array of sequenceable actions given an array </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSequence (CocosSharp.CCFiniteTimeAction action1, CocosSharp.CCFiniteTimeAction action2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCFiniteTimeAction action1, class CocosSharp.CCFiniteTimeAction action2) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="action1" Type="CocosSharp.CCFiniteTimeAction" />
        <Parameter Name="action2" Type="CocosSharp.CCFiniteTimeAction" />
      </Parameters>
      <Docs>
        <param name="action1">To be added.</param>
        <param name="action2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public CocosSharp.CCFiniteTimeAction[] Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCFiniteTimeAction[] Actions" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCFiniteTimeAction[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCFiniteTimeAction Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class CocosSharp.CCFiniteTimeAction Reverse() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCFiniteTimeAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>returns a new action that performs the exactly the reverse action </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override CocosSharp.CCActionState StartAction (CocosSharp.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class CocosSharp.CCActionState StartAction(class CocosSharp.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="CocosSharp.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">Target object on which the action will be performed.</param>
        <summary>
          <para kind="tool">Starts the action on the specified target</para>
        </summary>
        <returns>
        </returns>
        <remarks>
          <para kind="tool">This creates a new state object of type <see cref="T:CocosSharp.CCActionState" /> that will track the state of the action.</para>
          <para kind="tool">This method is typically invoked by implementations of CCActions or by the CocosSharp runtime, when you invoke the <see cref="M:CocosSharp.CCNode.AddAction" /> method.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
