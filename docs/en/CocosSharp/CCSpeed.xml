<Type Name="CCSpeed" FullName="CocosSharp.CCSpeed">
  <TypeSignature Language="C#" Value="public class CCSpeed : CocosSharp.CCAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCSpeed extends CocosSharp.CCAction" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCAction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>A container action modifier to alter the running speed of another predefined action.</para>
    </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpeed (CocosSharp.CCFiniteTimeAction action, float speed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCFiniteTimeAction action, float32 speed) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="action" Type="CocosSharp.CCFiniteTimeAction" />
        <Parameter Name="speed" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="action">The original <see cref="T:CocosSharp.CCFiniteTimeAction" /> action.</param>
        <param name="speed">To speed modifier.</param>
        <summary />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InnerAction">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCFiniteTimeAction InnerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCFiniteTimeAction InnerAction" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCFiniteTimeAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The original action whose running speed will be modified</summary>
        <value>A <see cref="T:CocosSharp.CCFiniteTimeAction" /> action.</value>
        <remarks>Note, the action instance itself will be unaltered.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual CocosSharp.CCFiniteTimeAction Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CocosSharp.CCFiniteTimeAction Reverse() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCFiniteTimeAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the speed modified reverse <see cref="P:CocosSharp.CCSpeed.InnerAction" /> action.</summary>
        <returns>The reverse <see cref="T:CocosSharp.CCSpeed" /> action. </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public float Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Speed" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The modified running speed multiplier relative to the original <see cref="P:CocosSharp.CCSpeed.InnerAction" /> running time.</summary>
        <value>A positive <see langword="float" />.</value>
        <remarks>Note, that a speed of <see langword="1.0f" /> means that the <see cref="T:CocosSharp.CCSpeed" /> action will run at the same speed as the original <see cref="P:CocosSharp.CCSpeed.InnerAction" />.
<example><code lang="C#">
var action = new CCMoveBy(2.0f, new CCPoint(100, 0));
var speedyAction = new CCSpeed(action, 2.0f);

// Action will take 2 seconds to complete
node1.RunAction(action);

// Speedy action has a speed multiplier of 2.0
// Therefore, action will take 1 second to complete
node2.RunAction(speedyAction);
</code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override CocosSharp.CCActionState StartAction (CocosSharp.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class CocosSharp.CCActionState StartAction(class CocosSharp.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="CocosSharp.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
