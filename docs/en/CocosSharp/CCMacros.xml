<Type Name="CCMacros" FullName="CocosSharp.CCMacros">
  <TypeSignature Language="C#" Value="public static class CCMacros" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CCMacros extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CCDegreesToRadians">
      <MemberSignature Language="C#" Value="public static float CCDegreesToRadians (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CCDegreesToRadians(float32 angle) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CCRadiansToDegrees">
      <MemberSignature Language="C#" Value="public static float CCRadiansToDegrees (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CCRadiansToDegrees(float32 angle) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CCRandomBetween0And1">
      <MemberSignature Language="C#" Value="public static float CCRandomBetween0And1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CCRandomBetween0And1() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CCRandomBetweenNegative1And1">
      <MemberSignature Language="C#" Value="public static float CCRandomBetweenNegative1And1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CCRandomBetweenNegative1And1() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CCSwap&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CCSwap&lt;T&gt; (ref T x, ref T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CCSwap&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T&amp;" RefType="ref" />
        <Parameter Name="y" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
