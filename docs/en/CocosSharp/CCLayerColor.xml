<Type Name="CCLayerColor" FullName="CocosSharp.CCLayerColor">
  <TypeSignature Language="C#" Value="public class CCLayerColor : CocosSharp.CCLayer, CocosSharp.ICCBlendable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCLayerColor extends CocosSharp.CCLayer implements class CocosSharp.ICCBlendable" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCLayer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CocosSharp.ICCBlendable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para> is a subclass of  that implements the RGBAProtocol protocol. </para>
    </summary>
    <remarks>
      <para>All features from <see cref="T:CocosSharp.CCLayer" /> are valid, plus the following new features:<list type="bullet" /></para>
      <see cref="T:CocosSharp.CCLayer" />
      <list type="bullet" />
      <item>
        <description>opacity</description>
      </item>
      <description>opacity</description>
      <item>
        <description>RGB colors </description>
      </item>
      <description>RGB colors </description>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>creates a  with color. Width and height are the window size. </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor (CocosSharp.CCCamera camera);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCCamera camera) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="camera" Type="CocosSharp.CCCamera" />
      </Parameters>
      <Docs>
        <param name="camera">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor (CocosSharp.CCColor4B color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCColor4B color) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="color" Type="CocosSharp.CCColor4B" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor (CocosSharp.CCSize visibleBoundsDimensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCSize visibleBoundsDimensions) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="visibleBoundsDimensions" Type="CocosSharp.CCSize" />
      </Parameters>
      <Docs>
        <param name="visibleBoundsDimensions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor (CocosSharp.CCCamera camera, CocosSharp.CCColor4B color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCCamera camera, valuetype CocosSharp.CCColor4B color) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="camera" Type="CocosSharp.CCCamera" />
        <Parameter Name="color" Type="CocosSharp.CCColor4B" />
      </Parameters>
      <Docs>
        <param name="camera">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCLayerColor (CocosSharp.CCSize visibleBoundsDimensions, CocosSharp.CCColor4B color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCSize visibleBoundsDimensions, valuetype CocosSharp.CCColor4B color) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="visibleBoundsDimensions" Type="CocosSharp.CCSize" />
        <Parameter Name="color" Type="CocosSharp.CCColor4B" />
      </Parameters>
      <Docs>
        <param name="visibleBoundsDimensions">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFunc">
      <MemberSignature Language="C#" Value="public virtual CocosSharp.CCBlendFunc BlendFunc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCBlendFunc BlendFunc" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCBlendFunc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setBlendFunc </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCColor3B Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCColor3B Color" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCColor3B</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Changes the color with R,G,B bytes</summary>
        <value>To be added.</value>
        <remarks>
          <para>Changes the color with R,G,B bytes</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSize">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCSize ContentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCSize ContentSize" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the untransformed size of the node.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Sets the untransformed size of the node.</para>
          <para>The contentSize remains the same no matter the node is scaled or rotated. All nodes has a size. <see cref="T:CocosSharp.CCLayer" /> and <see cref="T:CocosSharp.CCScene" /> has the same size of the screen.</para>
          <see cref="T:CocosSharp.CCLayer" />
          <see cref="T:CocosSharp.CCScene" />
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="protected override void Draw ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Draw() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override this method to draw your own node. The following GL states will be enabled by default:</summary>
        <remarks>
          <para>Override this method to draw your own node. The following GL states will be enabled by default:<list type="bullet" /></para>
          <list type="bullet" />
          <item>
            <description>glEnableClientState(GL_VERTEX_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_VERTEX_ARRAY);</description>
          <item>
            <description>glEnableClientState(GL_COLOR_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_COLOR_ARRAY);</description>
          <item>
            <description>glEnableClientState(GL_TEXTURE_COORD_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_TEXTURE_COORD_ARRAY);</description>
          <item>
            <description>glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. </description>
          </item>
          <description>glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. </description>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public override byte Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Opacity" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Changes the opacity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Changes the opacity.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateColor">
      <MemberSignature Language="C#" Value="public override void UpdateColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateColor() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportChanged">
      <MemberSignature Language="C#" Value="protected override void ViewportChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ViewportChanged() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleBoundsChanged">
      <MemberSignature Language="C#" Value="protected override void VisibleBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void VisibleBoundsChanged() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
