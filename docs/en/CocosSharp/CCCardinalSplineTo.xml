<Type Name="CCCardinalSplineTo" FullName="CocosSharp.CCCardinalSplineTo">
  <TypeSignature Language="C#" Value="public class CCCardinalSplineTo : CocosSharp.CCFiniteTimeAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCCardinalSplineTo extends CocosSharp.CCFiniteTimeAction" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCFiniteTimeAction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cardinal Spline path. http://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline</summary>
    <remarks>
      <para kind="tool">When this action is added to a CCNode, the action will run over a period of time.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCCardinalSplineTo (float duration, System.Collections.Generic.List&lt;CocosSharp.CCPoint&gt; points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 duration, class System.Collections.Generic.List`1&lt;valuetype CocosSharp.CCPoint&gt; points, float32 tension) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="duration" Type="System.Single" />
        <Parameter Name="points" Type="System.Collections.Generic.List&lt;CocosSharp.CCPoint&gt;" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="points">To be added.</param>
        <param name="tension">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;CocosSharp.CCPoint&gt; Points { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype CocosSharp.CCPoint&gt; Points" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;CocosSharp.CCPoint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public override CocosSharp.CCFiniteTimeAction Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class CocosSharp.CCFiniteTimeAction Reverse() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCFiniteTimeAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>returns a new reversed action </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override CocosSharp.CCActionState StartAction (CocosSharp.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class CocosSharp.CCActionState StartAction(class CocosSharp.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="CocosSharp.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">Target object on which the action will be performed.</param>
        <summary>
          <para kind="tool">Starts the action on the specified target</para>
        </summary>
        <returns>
        </returns>
        <remarks>
          <para kind="tool">This creates a new state object of type <see cref="T:CocosSharp.CCActionState" /> that will track the state of the action.</para>
          <para kind="tool">This method is typically invoked by implementations of CCActions or by the CocosSharp runtime, when you invoke the <see cref="M:CocosSharp.CCNode.AddAction" /> method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tension">
      <MemberSignature Language="C#" Value="public float Tension { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Tension" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
