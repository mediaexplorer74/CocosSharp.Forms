<Type Name="CCTextureAtlas" FullName="CocosSharp.CCTextureAtlas">
  <TypeSignature Language="C#" Value="public class CCTextureAtlas" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCTextureAtlas extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>A class that implements a Texture Atlas. Supported features: The atlas file can be a PVRTC, PNG or any other format supported by  Quads can be updated in runtime Quads can be added in runtime Quads can be removed in runtime Quads can be re-ordered in runtime The  capacity can be increased or decreased in runtime OpenGL component: V3F, C4B, T2F. The quads are rendered using an OpenGL ES VBO. To render the quads using an interleaved vertex array list, you should modify the ccConfig.h file. </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTextureAtlas (CocosSharp.CCTexture2D texture, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCTexture2D texture, int32 capacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="texture" Type="CocosSharp.CCTexture2D" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTextureAtlas (string file, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string file, int32 capacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>getCapacity </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="protected bool Dirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dirty" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawNumberOfQuads">
      <MemberSignature Language="C#" Value="public void DrawNumberOfQuads (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawNumberOfQuads(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>draws n quads from an index (offset).
 n + start can't be greater than the capacity of the atlas</summary>
        <remarks>
          <para>
            <verbatim>draws n quads from an index (offset).
</verbatim> n + start can't be greater than the capacity of the atlas</para>
          <verbatim>draws n quads from an index (offset).
</verbatim>
          <para>
            <para>v1.0 </para>
          </para>
          <para>v1.0 </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawNumberOfQuads">
      <MemberSignature Language="C#" Value="public void DrawNumberOfQuads (int n, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawNumberOfQuads(int32 n, int32 start) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="start">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawQuads">
      <MemberSignature Language="C#" Value="public void DrawQuads ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawQuads() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>draws all the Atlas's Quads </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FillWithEmptyQuadsFromIndex">
      <MemberSignature Language="C#" Value="public void FillWithEmptyQuadsFromIndex (int index, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillWithEmptyQuadsFromIndex(int32 index, int32 amount) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="amount">To be added.</param>
        <summary>Ensures that after a realloc quads are still empty Used internally by 1.1 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IncreaseTotalQuadsWith">
      <MemberSignature Language="C#" Value="public void IncreaseTotalQuadsWith (int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncreaseTotalQuadsWith(int32 amount) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="amount">To be added.</param>
        <summary>Used internally by  don't use this unless you know what you're doing 1.1 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertQuad">
      <MemberSignature Language="C#" Value="public void InsertQuad (ref CocosSharp.CCV3F_C4B_T2F_Quad quad, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertQuad(valuetype CocosSharp.CCV3F_C4B_T2F_Quad quad, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quad" Type="CocosSharp.CCV3F_C4B_T2F_Quad&amp;" RefType="ref" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="quad">To be added.</param>
        <param name="index">To be added.</param>
        <summary>Inserts a Quad (texture, vertex and color) at a certain index
 index must be between 0 and the atlas capacity - 1 v0.8 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertQuadFromIndex">
      <MemberSignature Language="C#" Value="public void InsertQuadFromIndex (int oldIndex, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertQuadFromIndex(int32 oldIndex, int32 newIndex) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldIndex" Type="System.Int32" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldIndex">To be added.</param>
        <param name="newIndex">To be added.</param>
        <summary>Removes the quad that is located at a certain index and inserts it at a new index
 This operation is faster than removing and inserting in a quad in 2 different steps v0.7.2 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsAntialiased">
      <MemberSignature Language="C#" Value="public bool IsAntialiased { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAntialiased" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveQuadsFromIndex">
      <MemberSignature Language="C#" Value="public void MoveQuadsFromIndex (int index, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveQuadsFromIndex(int32 index, int32 newIndex) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="newIndex">To be added.</param>
        <summary>Moves quads from index till totalQuads to the newIndex Used internally by  This method doesn't enlarge the array if newIndex + quads to be moved &gt; capacity 1.1 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MoveQuadsFromIndex">
      <MemberSignature Language="C#" Value="public void MoveQuadsFromIndex (int oldIndex, int amount, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveQuadsFromIndex(int32 oldIndex, int32 amount, int32 newIndex) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldIndex" Type="System.Int32" />
        <Parameter Name="amount" Type="System.Int32" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldIndex">To be added.</param>
        <param name="amount">To be added.</param>
        <param name="newIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quads">
      <MemberSignature Language="C#" Value="protected CocosSharp.CCRawList&lt;CocosSharp.CCV3F_C4B_T2F_Quad&gt; Quads { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCRawList`1&lt;valuetype CocosSharp.CCV3F_C4B_T2F_Quad&gt; Quads" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCRawList&lt;CocosSharp.CCV3F_C4B_T2F_Quad&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllQuads">
      <MemberSignature Language="C#" Value="public void RemoveAllQuads ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllQuads() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>removes all Quads.
 The  capacity remains untouched. No memory is freed. The total number of quads to be drawn will be 0 v0.7.2 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveQuadAtIndex">
      <MemberSignature Language="C#" Value="public void RemoveQuadAtIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveQuadAtIndex(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>removes a quad at a given index number.
 The capacity remains the same, but the total number of quads to be drawn is reduced in 1 v0.7.2 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveQuadsAtIndex">
      <MemberSignature Language="C#" Value="public void RemoveQuadsAtIndex (int index, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveQuadsAtIndex(int32 index, int32 amount) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="amount">To be added.</param>
        <summary>removes a amount of quads starting from index 1.1 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ResizeCapacity">
      <MemberSignature Language="C#" Value="public void ResizeCapacity (int newCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResizeCapacity(int32 newCapacity) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newCapacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public CocosSharp.CCTexture2D Texture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CocosSharp.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTexture </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalQuads">
      <MemberSignature Language="C#" Value="public int TotalQuads { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalQuads" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>getTotalQuads </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UpdateQuad">
      <MemberSignature Language="C#" Value="public void UpdateQuad (ref CocosSharp.CCV3F_C4B_T2F_Quad quad, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateQuad(valuetype CocosSharp.CCV3F_C4B_T2F_Quad quad, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quad" Type="CocosSharp.CCV3F_C4B_T2F_Quad&amp;" RefType="ref" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="quad">To be added.</param>
        <param name="index">To be added.</param>
        <summary>updates a Quad (texture, vertex and color) at a certain index
 index must be between 0 and the atlas capacity - 1 v0.8 </summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
