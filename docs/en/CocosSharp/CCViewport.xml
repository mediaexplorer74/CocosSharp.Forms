<Type Name="CCViewport" FullName="CocosSharp.CCViewport">
  <TypeSignature Language="C#" Value="public class CCViewport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCViewport extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an area of the render target that should be used when drawing.</summary>
    <remarks>
      <para>

	The viewport itself does not specify the particular render
	target. Instead, a CCViewport object can be associated to a
	<see cref="T:CocosSharp.CCScene" /> scene to affects its
	rendering.

      </para>
      <para>
	A CCScene scene maintains a CCViewport instance variable.
      </para>
      <example>
        <code lang="c#">
// Custom viewport
// 
// As with the default, with the exception that the scene uses a custom viewport

public class AppDelegate : CCApplicationDelegate
{
    public override void ApplicationDidFinishLaunching(CCApplication application, CCWindow mainWindow)
    {
        mainWindow.SetDesignResolutionSize(960, 640, CCSceneResolutionPolicy.ShowAll);
        
        // Specify the ratio of the screen to occupy
        // Note: top-left corner represents origin in screen space
        CCViewport topLeftViewport = new CCViewport(new CCRect(0.0f, 0.0f, 0.5f, 0.5f));

        var scene = new CCScene(mainWindow, topLeftViewport);
        
        // Make sure we set custom policy, or else we to default to policy set by window
        // i.e. CCSceneResolutionPolicy.ShowAll implies that entire screen is used
        scene.SceneResolutionPolicy = CCSceneResolutionPolicy.Custom;

        var layer = new MyLayer();

        scene.AddChild(layer);
        sharedWindow.RunWithScene(scene);
    }
}
</code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCViewport (CocosSharp.CCRect exactFitLandscapeRatioIn, CocosSharp.CCViewportResolutionPolicy resolutionPolicyIn = CocosSharp.CCViewportResolutionPolicy.ExactFit, CocosSharp.CCDisplayOrientation displayOrientationIn = CocosSharp.CCDisplayOrientation.LandscapeLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCRect exactFitLandscapeRatioIn, valuetype CocosSharp.CCViewportResolutionPolicy resolutionPolicyIn, valuetype CocosSharp.CCDisplayOrientation displayOrientationIn) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="exactFitLandscapeRatioIn" Type="CocosSharp.CCRect" />
        <Parameter Name="resolutionPolicyIn" Type="CocosSharp.CCViewportResolutionPolicy" />
        <Parameter Name="displayOrientationIn" Type="CocosSharp.CCDisplayOrientation" />
      </Parameters>
      <Docs>
        <param name="exactFitLandscapeRatioIn">To be added.</param>
        <param name="resolutionPolicyIn">To be added.</param>
        <param name="displayOrientationIn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCViewport (CocosSharp.CCRect exactFitLandscapeRatioIn, CocosSharp.CCRect exactFitPortraitRatioIn, CocosSharp.CCViewportResolutionPolicy resolutionPolicyIn = CocosSharp.CCViewportResolutionPolicy.ExactFit, CocosSharp.CCDisplayOrientation displayOrientationIn = CocosSharp.CCDisplayOrientation.LandscapeLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCRect exactFitLandscapeRatioIn, valuetype CocosSharp.CCRect exactFitPortraitRatioIn, valuetype CocosSharp.CCViewportResolutionPolicy resolutionPolicyIn, valuetype CocosSharp.CCDisplayOrientation displayOrientationIn) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="exactFitLandscapeRatioIn" Type="CocosSharp.CCRect" />
        <Parameter Name="exactFitPortraitRatioIn" Type="CocosSharp.CCRect" />
        <Parameter Name="resolutionPolicyIn" Type="CocosSharp.CCViewportResolutionPolicy" />
        <Parameter Name="displayOrientationIn" Type="CocosSharp.CCDisplayOrientation" />
      </Parameters>
      <Docs>
        <param name="exactFitLandscapeRatioIn">To be added.</param>
        <param name="exactFitPortraitRatioIn">To be added.</param>
        <param name="resolutionPolicyIn">To be added.</param>
        <param name="displayOrientationIn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AspectRatio">
      <MemberSignature Language="C#" Value="public float AspectRatio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AspectRatio" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactFitLandscapeRatio">
      <MemberSignature Language="C#" Value="public CocosSharp.CCRect ExactFitLandscapeRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCRect ExactFitLandscapeRatio" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactFitPortraitRatio">
      <MemberSignature Language="C#" Value="public CocosSharp.CCRect ExactFitPortraitRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCRect ExactFitPortraitRatio" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionPolicy">
      <MemberSignature Language="C#" Value="public CocosSharp.CCViewportResolutionPolicy ResolutionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCViewportResolutionPolicy ResolutionPolicy" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCViewportResolutionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
